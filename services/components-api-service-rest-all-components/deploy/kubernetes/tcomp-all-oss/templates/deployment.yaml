{{- $envValues := pluck .Values.global.env .Values | first | default .Values }}
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: {{ template "tcomp-oss-all.fullname" . }}
  labels:
{{ include "tcomp-oss-all.labels" . | indent 4 }}
spec:
  replicas: {{ default .Values.replicaCount $envValues.replicaCount | int }}
  template:
    metadata:
      labels:
        app: {{ template "tcomp-oss-all.name" . }}
        release: {{ .Release.Name }}
    spec:
      {{- if ne (include "tcomp-oss-all.imageRegistry" .) "" }}
      imagePullSecrets:
        - name: {{ template "tcomp-oss-all.registryKey" . }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: {{ template "tcomp-oss-all.image" . }}
          imagePullPolicy: {{ default .Values.image $envValues.image | pluck "pullPolicy" | first | default .Values.image.pullPolicy }}
          ports:
            - name: {{ template "tcomp-oss-all.servicePortName" . }}
              containerPort: {{ default .Values.service $envValues.service | pluck "defaultPort" | first | default .Values.service.defaultPort }}
          envFrom:
            - configMapRef:
                name: {{ template "tcomp-oss-all.fullname" . }}
          livenessProbe:
            httpGet:
              path: /tcomp/health
              port: {{ template "tcomp-oss-all.servicePortName" . }}
            initialDelaySeconds: 20
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /tcomp/health
              port: {{ template "tcomp-oss-all.servicePortName" . }}
            initialDelaySeconds: 20
            timeoutSeconds: 5
          volumeMounts:
            - name: spark-config
              mountPath: /spark-cluster-config
          {{- if $envValues.resources }}
          resources:
            {{ toYaml $envValues.resources | indent 12 }}
          {{- end }}
      volumes:
        - name: spark-config
        {{- $persistanceEnabled := default .Values.persistence $envValues.persistence | pluck "enabled" | first | default .Values.persistence.enabled }}
        {{- if $persistanceEnabled }}
          persistentVolumeClaim:
            claimName: {{ default .Values.persistence $envValues.persistence | pluck "volumeClaimName" | first | default .Values.persistence.volumeClaimName }}
        {{- else }}
          emptyDir: {}
        {{- end -}}
      {{- if $envValues.nodeAffinity }}
      affinity:
        nodeAffinity:
          {{ toYaml $envValues.nodeAffinity | indent 10 }}
      {{- end }}